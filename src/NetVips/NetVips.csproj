<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="..\..\build\common.props" />

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net46</TargetFrameworks>
    <TargetFrameworks Condition="'$(OS)' != 'Windows_NT'">netstandard2.0</TargetFrameworks>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <ApplicationIcon />
    <OutputType>Library</OutputType>
    <StartupObject />
    <Platforms>AnyCPU;x64</Platforms>
    <Optimize>true</Optimize>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeInPackage</TargetsForTfmSpecificContentInPackage>
    <DefaultItemExcludes>$(DefaultItemExcludes);Interop\Libraries.*.cs</DefaultItemExcludes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <!-- Give an initial value based on the operating system where it's currently running on. -->
  <PropertyGroup Condition="'$(TargetOS)' == ''">
    <TargetOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">Linux</TargetOS>
    <TargetOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">OSX</TargetOS>
    <TargetOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">Windows</TargetOS>
  </PropertyGroup>

  <PropertyGroup>
    <OutputPath>bin\$(Configuration)\$(TargetOS)</OutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)\$(Configuration)\$(TargetOS)\</IntermediateOutputPath>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="Interop\Libraries.$(TargetOS).cs">
        <Link>Interop\Libraries.cs</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CSharp" Version="4.4.1" />
    <PackageReference Include="Fody" Version="3.0.3">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="ModuleInit.Fody" Version="1.8.0">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Only include .NET Standard packages on Linux and macOS -->
  <Target Name="IncludeInPackage" Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <ItemGroup>
      <TfmSpecificPackageFile Include="bin\$(Configuration)\Linux\$(TargetFramework)\NetVips.dll">
        <PackagePath>runtimes\linux\lib\$(TargetFramework)\NetVips.dll</PackagePath>
      </TfmSpecificPackageFile>
      <TfmSpecificPackageFile Include="bin\$(Configuration)\OSX\$(TargetFramework)\NetVips.dll">
        <PackagePath>runtimes\osx\lib\$(TargetFramework)\NetVips.dll</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>

  <ItemGroup>
    <PackageReference Update="Microsoft.NETCore.App" Version="2.0.6" />
    <PackageReference Update="NETStandard.Library" Version="2.0.3" />
  </ItemGroup>

</Project>
