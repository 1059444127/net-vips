// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace NetVips.AutoGen
{
    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate void GObjectGetPropertyFunc(global::System.IntPtr @object, uint property_id, global::System.IntPtr value, global::System.IntPtr pspec);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate void GObjectSetPropertyFunc(global::System.IntPtr @object, uint property_id, global::System.IntPtr value, global::System.IntPtr pspec);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate void GObjectFinalizeFunc(global::System.IntPtr @object);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate void GWeakNotify(global::System.IntPtr data, global::System.IntPtr where_the_object_was);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate void GToggleNotify(global::System.IntPtr data, global::System.IntPtr @object, int is_last_ref);

    public unsafe partial class GObject : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 24)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal global::NetVips.AutoGen.GTypeInstance.__Internal g_type_instance;

            [FieldOffset(8)]
            internal uint ref_count;

            [FieldOffset(16)]
            internal global::System.IntPtr qdata;
        }

        public global::System.IntPtr __Instance { get; protected set; }

        protected int __PointerAdjustment;
        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NetVips.AutoGen.GObject> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NetVips.AutoGen.GObject>();
        protected void*[] __OriginalVTables;

        protected bool __ownsNativeInstance;

        internal static global::NetVips.AutoGen.GObject __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new global::NetVips.AutoGen.GObject(native.ToPointer(), skipVTables);
        }

        internal static global::NetVips.AutoGen.GObject __CreateInstance(global::NetVips.AutoGen.GObject.__Internal native, bool skipVTables = false)
        {
            return new global::NetVips.AutoGen.GObject(native, skipVTables);
        }

        private static void* __CopyValue(global::NetVips.AutoGen.GObject.__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(global::NetVips.AutoGen.GObject.__Internal));
            *(global::NetVips.AutoGen.GObject.__Internal*) ret = native;
            return ret.ToPointer();
        }

        private GObject(global::NetVips.AutoGen.GObject.__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected GObject(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        ~GObject()
        {
            Dispose(false);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
            GC.SuppressFinalize(this);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NetVips.AutoGen.GObject __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public uint RefCount
        {
            get
            {
                return ((global::NetVips.AutoGen.GObject.__Internal*) __Instance)->ref_count;
            }

            set
            {
                ((global::NetVips.AutoGen.GObject.__Internal*)__Instance)->ref_count = value;
            }
        }
    }

    public unsafe partial class GObjectClass
    {
        [StructLayout(LayoutKind.Explicit, Size = 136)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal global::NetVips.AutoGen.GTypeClass.__Internal g_type_class;

            [FieldOffset(8)]
            internal global::System.IntPtr construct_properties;

            [FieldOffset(16)]
            internal global::System.IntPtr constructor;

            [FieldOffset(24)]
            internal global::System.IntPtr set_property;

            [FieldOffset(32)]
            internal global::System.IntPtr get_property;

            [FieldOffset(40)]
            internal global::System.IntPtr dispose;

            [FieldOffset(48)]
            internal global::System.IntPtr finalize;

            [FieldOffset(56)]
            internal global::System.IntPtr dispatch_properties_changed;

            [FieldOffset(64)]
            internal global::System.IntPtr notify;

            [FieldOffset(72)]
            internal global::System.IntPtr constructed;

            [FieldOffset(80)]
            internal ulong flags;

            [FieldOffset(88)]
            internal void* pdummy;
        }
    }

    public unsafe partial class gobject
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("libgobject-2.0-0.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="g_object_set_property")]
            internal static extern void GObjectSetProperty(global::System.IntPtr @object, [MarshalAs(UnmanagedType.LPStr)] string property_name, global::System.IntPtr value);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("libgobject-2.0-0.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="g_object_get_property")]
            internal static extern void GObjectGetProperty(global::System.IntPtr @object, [MarshalAs(UnmanagedType.LPStr)] string property_name, global::System.IntPtr value);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("libgobject-2.0-0.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="g_object_ref")]
            internal static extern global::System.IntPtr GObjectRef(global::System.IntPtr @object);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("libgobject-2.0-0.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="g_object_unref")]
            internal static extern void GObjectUnref(global::System.IntPtr @object);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("libgobject-2.0-0.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="g_value_set_object")]
            internal static extern void GValueSetObject(global::System.IntPtr value, global::System.IntPtr v_object);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("libgobject-2.0-0.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="g_value_get_object")]
            internal static extern global::System.IntPtr GValueGetObject(global::System.IntPtr value);
        }

        public static void GObjectSetProperty(global::NetVips.AutoGen.GObject @object, string property_name, global::NetVips.AutoGen.GValue value)
        {
            var __arg0 = ReferenceEquals(@object, null) ? global::System.IntPtr.Zero : @object.__Instance;
            var __arg2 = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
            __Internal.GObjectSetProperty(__arg0, property_name, __arg2);
        }

        public static void GObjectGetProperty(global::NetVips.AutoGen.GObject @object, string property_name, global::NetVips.AutoGen.GValue value)
        {
            var __arg0 = ReferenceEquals(@object, null) ? global::System.IntPtr.Zero : @object.__Instance;
            var __arg2 = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
            __Internal.GObjectGetProperty(__arg0, property_name, __arg2);
        }

        public static global::System.IntPtr GObjectRef(global::System.IntPtr @object)
        {
            var __ret = __Internal.GObjectRef(@object);
            return __ret;
        }

        public static void GObjectUnref(global::System.IntPtr @object)
        {
            __Internal.GObjectUnref(@object);
        }

        public static void GValueSetObject(global::NetVips.AutoGen.GValue value, global::System.IntPtr v_object)
        {
            var __arg0 = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
            __Internal.GValueSetObject(__arg0, v_object);
        }

        public static global::System.IntPtr GValueGetObject(global::NetVips.AutoGen.GValue value)
        {
            var __arg0 = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
            var __ret = __Internal.GValueGetObject(__arg0);
            return __ret;
        }
    }
}
